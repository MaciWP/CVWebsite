=== Archivo: reportWebVitals.js ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/reportWebVitals.js

const reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;


=== Archivo: index.js ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/index.js

// src/index.js

import React from 'react';
import { createRoot } from 'react-dom/client';
import App from './App';
import { I18nextProvider } from 'react-i18next';
import { ThemeProvider } from './contexts/ThemeContext';
import i18n from './i18n';
import * as serviceWorkerRegistration from './serviceWorkerRegistration';
import { BrowserRouter } from 'react-router-dom';

const container = document.getElementById('root');
const root = createRoot(container);

root.render(
  <React.StrictMode>
    <BrowserRouter>
      <I18nextProvider i18n={i18n}>
        <ThemeProvider>
          <App />
        </ThemeProvider>
      </I18nextProvider>
    </BrowserRouter>
  </React.StrictMode>
);

serviceWorkerRegistration.register();

=== Archivo: serviceWorkerRegistration.js ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/serviceWorkerRegistration.js

// src/serviceWorkerRegistration.js

// Adjusted the service worker registration script to match the public URL path

const isLocalhost = Boolean(
    window.location.hostname === 'localhost' ||
    window.location.hostname === '[::1]' ||
    window.location.hostname.match(
      /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
    )
  );
  
  export function register(config) {
    if ('serviceWorker' in navigator) {
      window.addEventListener('load', () => {
        const swUrl = `${process.env.PUBLIC_URL}/cv/service-worker.js`; // Adjusted path
  
        if (isLocalhost) {
          // Check if a service worker still exists or not
          checkValidServiceWorker(swUrl, config);
  
          navigator.serviceWorker.ready.then(() => {
            console.log(
              'This web app is being served cache-first by a service worker.'
            );
          });
        } else {
          // Is not localhost. Just register service worker
          registerValidSW(swUrl, config);
        }
      });
    }
  }
  
  function registerValidSW(swUrl, config) {
    navigator.serviceWorker
      .register(swUrl)
      .then((registration) => {
        if (registration.waiting) {
          if (config && config.onUpdate) {
            config.onUpdate(registration);
          }
          return;
        }
  
        registration.onupdatefound = () => {
          const installingWorker = registration.installing;
          if (installingWorker == null) {
            return;
          }
          installingWorker.onstatechange = () => {
            if (installingWorker.state === 'installed') {
              if (navigator.serviceWorker.controller) {
                // Nuevo contenido está disponible.
                if (config && config.onUpdate) {
                  config.onUpdate(registration);
                }
              } else {
                // Contenido precacheado ha sido instalado.
                if (config && config.onSuccess) {
                  config.onSuccess(registration);
                }
              }
            }
          };
        };
      })
      .catch((error) => {
        console.error('Error al registrar el service worker:', error);
      });
  }
  
  function checkValidServiceWorker(swUrl, config) {
    // Comprueba si el service worker puede ser encontrado.
    fetch(swUrl, {
      headers: { 'Service-Worker': 'script' },
    })
      .then((response) => {
        // Asegúrate de que el service worker existe y de que podemos obtenerlo.
        const contentType = response.headers.get('content-type');
        if (
          response.status === 404 ||
          (contentType != null && contentType.indexOf('javascript') === -1)
        ) {
          // No hay service worker. Recarga la página.
          navigator.serviceWorker.ready.then((registration) => {
            registration.unregister().then(() => {
              window.location.reload();
            });
          });
        } else {
          // Service worker encontrado. Procede con normalidad.
          registerValidSW(swUrl, config);
        }
      })
      .catch(() => {
        console.log(
          'No se pudo conectar al servidor para verificar el service worker.'
        );
      });
  }
  
  export function unregister() {
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.ready
        .then((registration) => {
          registration.unregister();
        })
        .catch((error) => {
          console.error(error.message);
        });
    }
  }
  

=== Archivo: App.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/App.jsx

// src/App.jsx
import React, { Suspense, useContext, useEffect } from 'react';
import { HelmetProvider, Helmet } from 'react-helmet-async';
import { Route, Routes } from 'react-router-dom';
import { ThemeContext } from './contexts/ThemeContext';
import { useTranslation } from 'react-i18next';
import './styles/main.scss';

const Header = React.lazy(() => import('./components/Header'));
const Introduction = React.lazy(() => import('./components/Introduction'));
const Experience = React.lazy(() => import('./components/Experience'));
const Education = React.lazy(() => import('./components/Education'));
const Skills = React.lazy(() => import('./components/Skills'));
const Projects = React.lazy(() => import('./components/Projects'));
const Languages = React.lazy(() => import('./components/Languages'));
const Footer = React.lazy(() => import('./components/Footer'));

function App() {
  const { theme } = useContext(ThemeContext);
  const { t } = useTranslation();

  useEffect(() => {
    document.documentElement.setAttribute('data-theme', theme);
  }, [theme]);

  return (
    <div className="App">
      <HelmetProvider>
        <Helmet>
          <title>{`${t('header.name')} - ${t('introduction.title')}`}</title>
          <meta
            name="description"
            content={t('introduction.description')}
          />
        </Helmet>
      </HelmetProvider>
      <Suspense fallback={<div>Loading...</div>}>
        <Header />
        <Routes>
          <Route
            path="/"
            element={
              <main>
                <Introduction />
                <Experience />
                <Education />
                <Skills />
                <Projects />
                <Languages />
              </main>
            }
          />
        </Routes>
        <Footer />
      </Suspense>
    </div>
  );
}

export default App;

=== Archivo: setupTests.js ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/setupTests.js

// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';


=== Archivo: i18n.js ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/i18n.js

// src/i18n.js

import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';

import translationEN from './locales/en/translation.json';
import translationDE from './locales/de/translation.json';
import translationES from './locales/es/translation.json';
import translationFR from './locales/fr/translation.json';
import translationIT from './locales/it/translation.json';

const resources = {
  en: {
    translation: translationEN,
  },
  de: {
    translation: translationDE,
  },
  es: {
    translation: translationES,
  },
  fr: {
    translation: translationFR,
  },
  it: {
    translation: translationIT,
  },
};

i18n.use(initReactI18next).init({
  resources,
  lng: 'en', // Idioma por defecto
  fallbackLng: 'en',
  interpolation: {
    escapeValue: false,
  },
});

export default i18n;


=== Archivo: ThemeContext.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/contexts/ThemeContext.jsx

import React, { createContext, useState, useEffect } from 'react';

export const ThemeContext = createContext();

const getInitialTheme = () => {
  const savedTheme = localStorage.getItem('theme');
  return savedTheme || 'light';
};

export const ThemeProvider = ({ children }) => {
  const [theme, setTheme] = useState(getInitialTheme);

  useEffect(() => {
    document.documentElement.setAttribute('data-theme', theme);
    localStorage.setItem('theme', theme);
  }, [theme]);

  const toggleTheme = () => {
    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');
  };

  const toggleHighContrast = () => {
    setTheme(prevTheme => prevTheme === 'high-contrast' ? 'light' : 'high-contrast');
  };

  return (
    <ThemeContext.Provider value={{ theme, toggleTheme, toggleHighContrast }}>
      {children}
    </ThemeContext.Provider>
  );
};

=== Archivo: translation.json ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/locales/it/translation.json

{
    "header": {
      "name": "Il Tuo Nome",
      "nav": {
        "home": "Home",
        "experience": "Esperienza",
        "education": "Formazione",
        "skills": "Competenze",
        "projects": "Progetti",
        "languages": "Lingue",
        "contact": "Contatto"
      }
    },
    "introduction": {
      "title": "Architetto Software Senior",
      "description": "Oltre 10 anni di esperienza nel design e sviluppo di sistemi scalabili.",
      "altText": "Foto profilo di Il Tuo Nome"
    },
    "experience": {
      "title": "Esperienza Professionale",
      "at": "presso"
    },
    "education": {
      "title": "Formazione e Certificazioni"
    },
    "skills": {
      "title": "Competenze Tecniche"
    },
    "projects": {
      "title": "Progetti in Evidenza",
      "viewMore": "Vedi di più"
    },
    "languages": {
      "title": "Lingue"
    },
    "testimonials": {
      "title": "Testimonianze"
    },
    "contact": {
      "title": "Contatto",
      "email": "Email",
      "downloadCV": "Scarica CV in PDF",
      "scheduleInterview": "Programma un Colloquio"
    },
    "footer": {
      "name": "Il Tuo Nome",
      "rights": "Tutti i diritti riservati.",
      "privacyPolicy": "Informativa sulla Privacy"
    }
  }
  

=== Archivo: translation.json ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/locales/de/translation.json

{
  "header": {
    "name": "Ihr Name",
    "nav": {
      "home": "Startseite",
      "experience": "Erfahrung",
      "education": "Ausbildung",
      "skills": "Fähigkeiten",
      "projects": "Projekte",
      "languages": "Sprachen",
      "contact": "Kontakt"
    }
  },
  "introduction": {
    "title": "Senior Software Architekt",
    "description": "Über 10 Jahre Erfahrung im Design und in der Entwicklung skalierbarer Systeme.",
    "altText": "Profilfoto von Ihr Name"
  },
  "experience": {
    "title": "Berufserfahrung",
    "at": "bei"
  },
  "education": {
    "title": "Bildung und Zertifikate"
  },
  "skills": {
    "title": "Technische Fähigkeiten"
  },
  "projects": {
    "title": "Ausgewählte Projekte",
    "viewMore": "Mehr ansehen"
  },
  "languages": {
    "title": "Sprachen"
  },
  "testimonials": {
    "title": "Empfehlungen"
  },
  "contact": {
    "title": "Kontakt",
    "email": "E-Mail",
    "downloadCV": "Lebenslauf als PDF herunterladen",
    "scheduleInterview": "Interview vereinbaren"
  },
  "footer": {
    "name": "Ihr Name",
    "rights": "Alle Rechte vorbehalten.",
    "privacyPolicy": "Datenschutzerklärung"
  }
}


=== Archivo: translation.json ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/locales/fr/translation.json

{
    "header": {
      "name": "Votre Nom",
      "nav": {
        "home": "Accueil",
        "experience": "Expérience",
        "education": "Éducation",
        "skills": "Compétences",
        "projects": "Projets",
        "languages": "Langues",
        "contact": "Contact"
      }
    },
    "introduction": {
      "title": "Architecte Logiciel Senior",
      "description": "Plus de 10 ans d'expérience dans la conception et le développement de systèmes évolutifs.",
      "altText": "Photo de profil de Votre Nom"
    },
    "experience": {
      "title": "Expérience Professionnelle",
      "at": "chez"
    },
    "education": {
      "title": "Éducation et Certifications"
    },
    "skills": {
      "title": "Compétences Techniques"
    },
    "projects": {
      "title": "Projets Mis en Avant",
      "viewMore": "Voir plus"
    },
    "languages": {
      "title": "Langues"
    },
    "testimonials": {
      "title": "Témoignages"
    },
    "contact": {
      "title": "Contact",
      "email": "E-mail",
      "downloadCV": "Télécharger le CV en PDF",
      "scheduleInterview": "Programmer un Entretien"
    },
    "footer": {
      "name": "Votre Nom",
      "rights": "Tous droits réservés.",
      "privacyPolicy": "Politique de Confidentialité"
    }
  }
  

=== Archivo: translation.json ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/locales/es/translation.json

{
  "header": {
    "name": "Tu Nombre",
    "nav": {
      "home": "Inicio",
      "experience": "Experiencia",
      "education": "Educación",
      "skills": "Habilidades",
      "projects": "Proyectos",
      "languages": "Idiomas",
      "contact": "Contacto"
    },
    "language": "Idioma",
    "darkMode": "Activar modo oscuro",
    "lightMode": "Activar modo claro",
    "highContrast": "Alternar alto contraste",
    "menu": "Menú"
  },
  "introduction": {
    "title": "Arquitecto de Software Senior",
    "description": "Más de 10 años de experiencia en diseño y desarrollo de sistemas escalables.",
    "altText": "Foto de perfil de Tu Nombre"
  },
  "experience": {
    "title": "Experiencia Profesional",
    "at": "en"
  },
  "education": {
    "title": "Educación y Certificaciones"
  },
  "skills": {
    "title": "Habilidades",
    "categories": {
      "programmingLanguages": "Lenguajes de Programación",
      "frameworks": "Frameworks",
      "softSkills": "Habilidades Blandas"
    }
  },
  "projects": {
    "title": "Proyectos Destacados",
    "viewMore": "Ver más"
  },
  "languages": {
    "title": "Idiomas"
  },
  "testimonials": {
    "title": "Recomendaciones"
  },
  "contact": {
    "title": "Contacto",
    "email": "Correo Electrónico",
    "downloadCV": "Descargar CV en PDF",
    "scheduleInterview": "Programar una Entrevista"
  },
  "footer": {
    "name": "Tu Nombre",
    "rights": "Todos los derechos reservados.",
    "privacyPolicy": "Política de Privacidad"
  }
}

=== Archivo: translation.json ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/locales/en/translation.json

{
  "header": {
    "name": "Your Name",
    "nav": {
      "home": "Home",
      "experience": "Experience",
      "education": "Education",
      "skills": "Skills",
      "projects": "Projects",
      "languages": "Languages",
      "contact": "Contact"
    }
  },
  "introduction": {
    "title": "Senior Software Architect",
    "description": "Over 10 years of experience designing and developing scalable systems.",
    "altText": "Profile photo of Your Name"
  },
  "experience": {
    "title": "Professional Experience",
    "at": "at"
  },
  "education": {
    "title": "Education and Certifications"
  },
  "skills": {
    "title": "Technical Skills",
    "categories": {
      "programmingLanguages": "Programming Languages",
      "frameworks": "Frameworks",
      "softSkills": "Soft Skills"
    }
  },
  "projects": {
    "title": "Featured Projects",
    "viewMore": "View More",
    "viewProject": "View Project",
    "viewCode": "View Code",
    "viewDemo": "View Demo",
    "loading": "Loading projects...",
    "error": "Error fetching projects.",
    "language": "Language",
    "noDescription": "No description available.",
    "unknown": "Unknown"
  },
  "languages": {
    "title": "Languages",
    "level": "Level"
  },
  "contact": {
    "title": "Contact",
    "email": "Email",
    "downloadCV": "Download CV in PDF",
    "scheduleInterview": "Schedule an Interview"
  },
  "footer": {
    "name": "Your Name",
    "rights": "All rights reserved.",
    "privacyPolicy": "Privacy Policy"
  }
}


=== Archivo: variables.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/variables.scss

// src/styles/_variables.scss

$breakpoint-mobile: 768px;
$breakpoint-tablet: 1024px;

:root {
  --primary-color: #005A9C;
  --primary-color-dark: #004578;
  --accent-color: #e74c3c;
  --accent-color-dark: #c0392b;
  --background-color: #f5f5f5;
  --card-background: #ffffff;
  --text-color: #333333;
  --secondary-color: #777777;
  --heading-color: #222222;

  // Spacing
  --spacing-small: 10px;
  --spacing-medium: 20px;
  --spacing-large: 40px;

  // Font sizes
  --font-size-small: 0.9em;
  --font-size-medium: 1em;
  --font-size-large: 1.2em;
  --font-size-xlarge: 1.5em;
}

[data-theme='dark'] {
  --primary-color: #1e90ff;
  --primary-color-dark: #1c7ed6;
  --accent-color: #ff6b6b;
  --accent-color-dark: #fa5252;
  --background-color: #1e1e1e;
  --card-background: #2c2c2c;
  --text-color: #f0f0f0;
  --secondary-color: #ced4da;
  --heading-color: #ffffff;
}

[data-theme='high-contrast'] {
  --primary-color: #00ffff;
  --primary-color-dark: #00e5ff;
  --accent-color: #ff00ff;
  --accent-color-dark: #e600e6;
  --background-color: #000000;
  --card-background: #1a1a1a;
  --text-color: #ffffff;
  --secondary-color: #ffffff;
  --heading-color: #ffffff;
}

=== Archivo: main.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/main.scss

// src/styles/main.scss

@import './variables';

// Estilos globales
html {
  scroll-behavior: smooth;
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Roboto', sans-serif;
  color: var(--text-color);
  background-color: var(--background-color);
  line-height: 1.6;
  transition: background-color 0.3s, color 0.3s;
}

.App {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

main {
  flex: 1;
}

// Estilos comunes para secciones
.section {
  padding: 30px 10px;
  max-width: 1200px;
  margin: 0 auto;

  &-title {
    text-align: center;
    font-size: 2.5em;
    margin-bottom: 50px;
    color: var(--primary-color);
    font-weight: bold;
  }

  &#projects {
    padding-top: 35px; // Reduce el margen superior
  }

}

// Estilos comunes para cards
.card {
  background-color: var(--card-background);
  border-radius: 8px;
  padding: 20px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  }
}

// Estilos comunes para botones
.button {
  display: inline-block;
  padding: 10px 20px;
  background-color: var(--primary-color);
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;

  &:hover {
    background-color: var(--primary-color-dark);
  }
}

// Estilos para enlaces
a {
  color: var(--primary-color);
  text-decoration: none;
  transition: color 0.3s;

  &:hover,
  &:focus {
    color: var(--accent-color);
    text-decoration: underline;
    outline: none;
  }
}

// Media queries
@media (max-width: $breakpoint-mobile) {
  .section {
    padding: 20px 15px;
  }
}

// Importar estilos de componentes
@import './components/Header';
@import './components/Introduction';
@import './components/Experience';
@import './components/Education';
@import './components/Skills';
@import './components/Projects';
@import './components/Languages';
@import './components/Footer';
@import './components/PDFModal';

=== Archivo: Skills.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Skills.scss

@import '../variables';

.skills {
  padding: 60px 20px;

  &__title {
    text-align: center;
    font-size: 2em;
    margin-bottom: 40px;
    color: var(--primary-color);
  }

  &__categories {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 30px;
  }

  &__category {
    background-color: var(--card-background);
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);

    &-title {
      font-size: 1.5em;
      color: var(--primary-color);
      margin-bottom: 20px;
      display: flex;
      align-items: center;

      svg {
        margin-right: 10px;
      }
    }
  }

  &__bars {
    display: flex;
    flex-direction: column;
    gap: 15px;
  }

  &__bar {
    display: flex;
    align-items: center;
    gap: 10px;

    &-name {
      flex: 1;
      display: flex;
      align-items: center;
      gap: 5px;

      svg {
        font-size: 1.2em;
      }
    }

    &-progress {
      flex: 2;
      height: 10px;
      background-color: var(--secondary-color);
      border-radius: 5px;
      overflow: hidden;
    }

    &-fill {
      height: 100%;
      background-color: var(--primary-color);
      transition: width 0.3s ease-in-out;
    }
  }

  &__soft-skills {
    list-style-type: none;
    padding: 0;

    li {
      margin-bottom: 10px;

      strong {
        color: var(--primary-color);
      }
    }
  }

  @media (max-width: $breakpoint-mobile) {
    &__categories {
      grid-template-columns: 1fr;
    }

    &__category {
      padding: 15px;
    }
  }
}

=== Archivo: Projects.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Projects.scss

/* src/styles/components/Projects.scss */

@import '../variables';

.projects {
  padding: 60px 20px;
  background-color: var(--background-color);

  &__title {
    text-align: center;
    font-size: 2em;
    margin-bottom: 40px;
    color: var(--primary-color);
  }

  &__grid {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 30px;
    max-width: 1200px;
    margin: 0 auto;
  }

  &__card {
    flex: 1 1 calc(33.333% - 20px);
    min-width: 280px;
    background-color: var(--card-background);
    border-radius: 8px;
    padding: 20px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    transition: transform 0.3s ease, box-shadow 0.3s ease;

    &:hover {
      transform: translateY(-5px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    &-title {
      font-size: 1.4em;
      color: var(--primary-color);
      margin-bottom: 10px;
    }

    &-description {
      font-size: 1em;
      color: var(--text-color);
      margin-bottom: 15px;
      flex-grow: 1;
    }

    &-technologies {
      display: flex;
      flex-wrap: wrap;
      gap: 10px;
      margin-bottom: 15px;
    }

    &-tech {
      font-size: 0.9em;
      color: var(--secondary-color);
      background-color: var(--background-color);
      padding: 5px 10px;
      border-radius: 15px;
      display: flex;
      align-items: center;
      gap: 5px;

      svg {
        font-size: 1.2em;
      }
    }

    &-link {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 8px 12px;
      background-color: var(--primary-color);
      color: #fff;
      text-decoration: none;
      border-radius: 5px;
      transition: background-color 0.3s ease;
      font-size: 0.9em;

      &:hover,
      &:focus {
        background-color: var(--primary-color-dark);
        outline: none;
      }

      svg {
        font-size: 1.2em;
      }
    }
  }

  @media (max-width: $breakpoint-tablet) {
    &__card {
      flex: 1 1 calc(50% - 15px);
    }
  }

  @media (max-width: $breakpoint-mobile) {
    &__card {
      flex: 1 1 100%;
    }
  }
}

=== Archivo: Education.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Education.scss

@import '../variables';

.experience, .education {
    .vertical-timeline-element-content {
      background-color: var(--card-background) !important;
      box-shadow: 0 3px 0 var(--card-background) !important;
      
      &, h3, h4, p, li, .vertical-timeline-element-date {
        color: var(--text-color) !important;
      }
    }
  
    .vertical-timeline-element-icon {
      background: var(--primary-color) !important;
      color: #fff !important;
    }
  
    .vertical-timeline-element-content-arrow {
      border-right: 7px solid var(--card-background) !important;
    }
  }

=== Archivo: PDFModal.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/PDFModal.scss

.pdf-modal {
    position: absolute;
    top: 50%;
    left: 50%;
    right: auto;
    bottom: auto;
    transform: translate(-50%, -50%);
    background-color: var(--background-color);
    width: 90%;
    max-width: 900px;
    height: 90vh;
    border-radius: 8px;
    padding: 20px;
    outline: none;
  }
  
  .pdf-modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.75);
    z-index: 9999;
  }
  
  .pdf-modal__content {
    width: 100%;
    height: 100%;
    position: relative;
  }
  
  .pdf-modal__close-button {
    position: absolute;
    top: -10px;
    right: -10px;
    background-color: var(--primary-color);
    color: white;
    border: none;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    font-size: 20px;
    cursor: pointer;
    z-index: 1;
  }
  
  .pdf-modal__content iframe {
    width: 100%;
    height: 100%;
    border: none;
  }

=== Archivo: Experience.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Experience.scss

@import '../variables';

.experience, .education {
    .vertical-timeline-element-content {
      background-color: var(--card-background) !important;
      box-shadow: 0 3px 0 var(--card-background) !important;
      
      &, h3, h4, p, li, .vertical-timeline-element-date {
        color: var(--text-color) !important;
      }
    }
  
    .vertical-timeline-element-icon {
      background: var(--primary-color) !important;
      color: #fff !important;
    }
  
    .vertical-timeline-element-content-arrow {
      border-right: 7px solid var(--card-background) !important;
    }
  }

=== Archivo: Introduction.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Introduction.scss

@import '../variables';

.introduction {
  padding: 100px 20px 10px;
  display: flex;
  align-items: center;
  justify-content: center;

  &__content {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    max-width: 1200px;
    width: 100%;
    gap: 40px;
  }

  &__photo {
    flex: 0 1 250px;
    text-align: center;

    img {
      width: 250px;
      height: 250px;
      border-radius: 50%;
      object-fit: cover;
      border: 5px solid var(--primary-color);
      box-shadow: 0 0 40px rgba(0, 0, 0, 0.2);
      transition: transform 0.3s ease;

      &:hover {
        transform: scale(1.05);
      }
    }
  }

  &__text {
    flex: 1 1 300px;
    text-align: left;

    .introduction__title {
      font-size: 3em;
      margin-bottom: 20px;
      color: var(--primary-color);
      font-weight: bold;
    }

    .introduction__description {
      font-size: 1.2em;
      line-height: 1.6;
      color: var(--text-color);
    }
  }

  &__animation {
    flex: 0 1 300px;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  @media (max-width: $breakpoint-tablet) {
    margin-top: 50px;
    &__content {
      flex-direction: column;
      text-align: center;
    }

    &__text {
      text-align: center;
    }
    
  }

  @media (max-width: $breakpoint-mobile) {
    margin-top: 95px;
    &__content {
      flex-direction: column;
      text-align: center;
    }

    &__text {
      text-align: center;
    }
    
  }
}

=== Archivo: Languages.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Languages.scss

@import '../variables';

#languages {
  .language-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    max-width: 1200px;
    margin: 0 auto;
  }

  .language-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 220px;
    background-color: var(--card-background);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;

    &:hover {
      transform: translateY(-5px);
    }

    img {
      width: 50px;
      height: auto;
      margin-bottom: 15px;
    }

    .language-info {
      text-align: center;
      width: 100%;

      h4 {
        margin: 0;
        font-size: 1.2em;
        color: var(--primary-color);
        margin-bottom: 10px;
      }

      p {
        margin: 5px 0;
        color: var(--text-color);
        font-size: 0.9em;
      }

      .language-progress {
        width: 100%;
        background-color: var(--secondary-color);
        border-radius: 5px;
        overflow: hidden;
        margin-top: 10px;

        .language-progress-bar {
          height: 10px;
          background-color: var(--primary-color);
          transition: width 0.3s;
        }
      }
    }
  }

  @media (max-width: $breakpoint-mobile) {
    .language-list {
      justify-content: center;
    }

    .language-item {
      width: 100%;
      max-width: 300px;
    }
  }
}

=== Archivo: Header.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Header.scss

@import '../variables';

.header {
  position: fixed;
  width: 100%;
  top: 0;
  background-color: var(--background-color);
  backdrop-filter: blur(5px);
  z-index: 1000;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  padding: 15px 30px;
  display: flex;
  justify-content: space-between;
  align-items: center;

  &__title {
    font-size: 2.6em;
    color: var(--primary-color);
    margin: 0;
  }

  &__nav {
    display: flex;
    gap: 15px;

    &-item {
      color: var(--text-color);
      text-decoration: none;
      display: flex;
      align-items: center;
      font-size: 1.1em;
      transition: color 0.3s ease;

      svg {
        margin-right: 8px;
        font-size: 1.6em;
      }

      &:hover,
      &:focus {
        color: var(--accent-color);
      }
    }
  }

  &__controls {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 50px;
    gap: 10px;
  }

  &__social {
    display: flex;
    gap: 10px;
    margin-right: 5px;

    a {
      color: var(--primary-color);
      font-size: 1.6em;
      transition: color 0.3s ease;

      &:hover,
      &:focus {
        color: var(--accent-color);
      }
    }
  }

  &__download-button,
  &__theme-toggle,
  &__contrast-toggle {
    background: none;
    align-items: center;
    justify-content: center;
    border: none;
    cursor: pointer;
    color: var(--primary-color);
    font-size: 1.5em;
    transition: color 0.3s ease;

    &:hover,
    &:focus {
      color: var(--accent-color);
    }
  }

  &__language-selector {
    font-size: 1.3em;
    align-items: center;
    justify-content: center;
    border: 1.5px solid var(--primary-color);
    background-color: var(--background-color);
    color: var(--text-color);
    cursor: pointer;
    border-radius: 5px;
  }

    @media (max-width: $breakpoint-tablet) {
    
    
        &__title {
          flex-basis: 100%;
          text-align: left;
          font-size: 3.5em;
          justify-content: center;

    
        }
    
        &__controls {
          order: 1;
          justify-content: center;
          text-align: left;
          flex-basis: 100%;
          font-size: 1.2em;
          margin-right: 10px;


        }
    
  }

  @media (max-width: $breakpoint-mobile) {
    flex-wrap: wrap;


    &__title {
      flex-basis: 100%;
      text-align: left;
      font-size: 2.5em;

    }

    &__controls {
      order: 2;
      gap: 15px;
      font-size: 1.1em;
      margin-right: 50px;
    }
}

}

=== Archivo: Footer.scss ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/styles/components/Footer.scss

/* Styles for the Footer component */

@import '../variables';

footer {
  padding: 40px 20px;
  background-color: var(--primary-color);
  color: #fff;
  text-align: center;

  .footer__contact {
    margin-bottom: 20px;

    p {
      margin: 5px 0;
      font-size: 1em;
      display: flex;
      justify-content: center;
      align-items: center;

      svg {
        margin-right: 10px;
      }
    }
  }

  .footer__social {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 20px;

    a {
      color: #fff;
      font-size: 1.5em;
      transition: color 0.3s;

      &:hover,
      &:focus {
        color: var(--accent-color);
        outline: none;
      }
    }
  }

  p {
    margin: 5px 0;
    font-size: 0.9em;
  }

  .footer__privacy-policy {
    color: #fff;
    text-decoration: underline;
    font-size: 0.9em;

    &:hover,
    &:focus {
      color: var(--accent-color);
      outline: none;
    }
  }
}


=== Archivo: Header.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Header.jsx

import React, { useState, useEffect, useContext } from 'react';
import { useTranslation } from 'react-i18next';
import { Link } from 'react-scroll';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import {
  faHome,
  faBriefcase,
  faGraduationCap,
  faCogs,
  faLanguage,
  faEnvelope,
  faDownload,
  faSun,
  faMoon,
  faAdjust,
} from '@fortawesome/free-solid-svg-icons';
import { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';
import { ThemeContext } from '../contexts/ThemeContext';
import PDFModal from './PDFModal';

const Header = () => {
  const { t, i18n } = useTranslation();
  const { theme, toggleTheme, toggleHighContrast } = useContext(ThemeContext);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [isMobile, setIsMobile] = useState(window.innerWidth <= 1024);


  useEffect(() => {
    const handleResize = () => {
      setIsMobile(window.innerWidth <= 1024);
    };

    window.addEventListener('resize', handleResize);
    return () => window.removeEventListener('resize', handleResize);
  }, []);

  const changeLanguage = (e) => {
    i18n.changeLanguage(e.target.value);
  };

  const navItems = [
    { to: 'introduction', icon: faHome, label: 'header.nav.home' },
    { to: 'experience', icon: faBriefcase, label: 'header.nav.experience' },
    { to: 'education', icon: faGraduationCap, label: 'header.nav.education' },
    { to: 'skills', icon: faCogs, label: 'header.nav.skills' },
    { to: 'languages', icon: faLanguage, label: 'header.nav.languages' },
  ];

  return (
    <header className="header">
      <h1 className="header__title">{t('header.name')}</h1>
      {!isMobile && (
        <nav className="header__nav">
          {navItems.map((item) => (
            <Link
              key={item.to}
              to={item.to}
              smooth={true}
              duration={500}
              className="header__nav-item"
            >
              <FontAwesomeIcon icon={item.icon} />
              <span className="nav-text">{t(item.label)}</span>
            </Link>
          ))}
        </nav>
      )}
      <div className="header__controls">
        <div className="header__social">
          <a href="mailto:your.email@example.com" aria-label={t('contact.email')}>
            <FontAwesomeIcon icon={faEnvelope} />
          </a>
          <a href="https://linkedin.com/in/yourusername" target="_blank" rel="noopener noreferrer" aria-label="LinkedIn">
            <FontAwesomeIcon icon={faLinkedin} />
          </a>
          <a href="https://github.com/yourusername" target="_blank" rel="noopener noreferrer" aria-label="GitHub">
            <FontAwesomeIcon icon={faGithub} />
          </a>
        </div>
        {isMobile ? (
          <a
            href="/TuCV.pdf"
            download
            className="header__download-button"
            aria-label={t('contact.downloadCV')}
          >
            <FontAwesomeIcon icon={faDownload} />
          </a>
        ) : (
          <button
            onClick={() => setIsModalOpen(true)}
            className="header__download-button"
            aria-label={t('contact.downloadCV')}
          >
            <FontAwesomeIcon icon={faDownload} />
          </button>
        )}
        <select onChange={changeLanguage} value={i18n.language} className="header__language-selector">
          <option value="en">EN</option>
          <option value="es">ES</option>
          <option value="de">DE</option>
          <option value="fr">FR</option>
          <option value="it">IT</option>
        </select>
        <button onClick={toggleTheme} className="header__theme-toggle" aria-label={theme === 'dark' ? t('header.lightMode') : t('header.darkMode')}>
          <FontAwesomeIcon icon={theme === 'dark' ? faSun : faMoon} />
        </button>
        <button onClick={toggleHighContrast} className="header__contrast-toggle" aria-label={t('header.highContrast')}>
          <FontAwesomeIcon icon={faAdjust} />
        </button>
      </div>
      <PDFModal
        isOpen={isModalOpen}
        onRequestClose={() => setIsModalOpen(false)}
      />    </header>
  );
};

export default Header;

=== Archivo: LanguageSelector.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/LanguageSelector.jsx

// src/components/LanguageSelector.jsx

import React from 'react';
import { useTranslation } from 'react-i18next';

const LanguageSelector = () => {
  const { i18n } = useTranslation();

  const changeLanguage = (lng) => {
    i18n.changeLanguage(lng);
  };

  return (
    <div className="language-selector">
      <button onClick={() => changeLanguage('en')}>EN</button>
      <button onClick={() => changeLanguage('de')}>DE</button>
      <button onClick={() => changeLanguage('es')}>ES</button>
      <button onClick={() => changeLanguage('fr')}>FR</button>
      <button onClick={() => changeLanguage('it')}>IT</button>
    </div>
  );
};

export default LanguageSelector;


=== Archivo: Footer.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Footer.jsx

// src/components/Footer.jsx

import React from 'react';
import { useTranslation } from 'react-i18next';
import '../styles/components/Footer.scss';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faEnvelope } from '@fortawesome/free-solid-svg-icons';
import { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons';

const Footer = () => {
  const { t } = useTranslation();

  return (
    <footer>
      <div className="footer__social">
        <a href="mailto:your.email@example.com" aria-label={t('contact.email')}>
          <FontAwesomeIcon icon={faEnvelope} />
        </a>
        <a
          href="https://linkedin.com/in/your_username"
          target="_blank"
          rel="noopener noreferrer"
          aria-label="LinkedIn"
        >
          <FontAwesomeIcon icon={faLinkedin} />
        </a>
        <a
          href="https://github.com/your_username"
          target="_blank"
          rel="noopener noreferrer"
          aria-label="GitHub"
        >
          <FontAwesomeIcon icon={faGithub} />
        </a>
      </div>
      <p>
        &copy; {new Date().getFullYear()} {t('footer.name')}. {t('footer.rights')}
      </p>
      {/* Removed the Privacy Policy link to clean up the footer */}
    </footer>
  );
};

export default Footer;


=== Archivo: Education.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Education.jsx

// File: src/components/Education.jsx

import React, { useContext} from 'react';
import { useTranslation } from 'react-i18next';
import { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faGraduationCap } from '@fortawesome/free-solid-svg-icons';
import { ThemeContext } from '../contexts/ThemeContext'; // Asegúrate de que la ruta sea correcta
import 'react-vertical-timeline-component/style.min.css';
import '../styles/components/Education.scss';

const educations = [
  {
    degree: 'Master of Computer Science',
    institution: 'University XYZ',
    period: '2015 - 2017',
    description: 'Specialization in Artificial Intelligence and Machine Learning.',
  },
  // Add more education entries here
];

const Education = () => {
  const { t } = useTranslation();
  const { theme } = useContext(ThemeContext);

  const getStyles = () => {
    switch(theme) {
      case 'dark':
        return {
          content: {
            background: '#2c2c2c',
            color: '#f0f0f0',
            borderTop: '3px solid #1e90ff'
          },
          arrowStyle: { borderRight: '7px solid #2c2c2c' },
          iconStyle: { background: '#1e90ff', color: '#fff' },
        };
      case 'high-contrast':
        return {
          content: {
            background: '#000000',
            color: '#ffffff',
            borderTop: '3px solid #00ffff'
          },
          arrowStyle: { borderRight: '7px solid #000000' },
          iconStyle: { background: '#00ffff', color: '#000000' },
        };
      default:
        return {
          content: {
            background: '#ffffff',
            color: '#333333',
            borderTop: '3px solid #005A9C'
          },
          arrowStyle: { borderRight: '7px solid #ffffff' },
          iconStyle: { background: '#005A9C', color: '#fff' },
        };
    }
  };

  const styles = getStyles();

  return (
    <section className="section" id="education">
      <div className="title-container">
        <h2 className="section-title">{t('education.title')}</h2>
      </div>
      <VerticalTimeline>
        {educations.map((edu, idx) => (
          <VerticalTimelineElement
            key={idx}
            date={edu.period}
            dateClassName={theme === 'dark' ? 'dark-text' : theme === 'high-contrast' ? 'high-contrast-text' : ''}
            icon={<FontAwesomeIcon icon={faGraduationCap} />}
            iconStyle={styles.iconStyle}
            contentStyle={styles.content}
            contentArrowStyle={styles.arrowStyle}
          >
            <h3 className="vertical-timeline-element-title">{edu.degree}</h3>
            <h4 className="vertical-timeline-element-subtitle">{edu.institution}</h4>
            <p>{edu.description}</p>
          </VerticalTimelineElement>
        ))}
      </VerticalTimeline>
    </section>
  );
};

export default Education;

=== Archivo: Introduction.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Introduction.jsx

import React from 'react';
import { useTranslation } from 'react-i18next';
import Lottie from 'lottie-react';
import animationData from '../assets/animations/introAnimation.json';
import '../styles/components/Introduction.scss';
import photo from '../assets/images/photo.webp';

const Introduction = () => {
  const { t } = useTranslation();


  return (
    <section id="introduction" className="introduction">
      <div className="introduction__content">
        <div className="introduction__photo">
          <img
            src={photo}
            alt={t('introduction.altText')}
            loading="lazy"
          />
        </div>
        <div className="introduction__text">
          <h2 className="introduction__title">{t('introduction.title')}</h2>
          <p className="introduction__description">{t('introduction.description')}</p>
        </div>
        <div className="introduction__animation" aria-label={t('introduction.animationAltText')}>
        <Lottie 
            animationData={animationData} 
            loop={true} 
            autoplay={true} 
            style={{ height: 300, width: 300 }} 
          />        </div>
      </div>
    </section>
  );
};

export default Introduction;

=== Archivo: Skills.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Skills.jsx

import React from 'react';
import { useTranslation } from 'react-i18next';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faCode, faTools, faUsers } from '@fortawesome/free-solid-svg-icons';
import { FaJava, FaPython, FaJs, FaReact, FaAngular, FaNode } from 'react-icons/fa';
import { SiCplusplus, SiSpringboot, SiDjango } from 'react-icons/si';
import '../styles/components/Skills.scss';

const skillIcons = {
  Java: <FaJava />,
  Python: <FaPython />,
  'C++': <SiCplusplus />,
  JavaScript: <FaJs />,
  React: <FaReact />,
  Angular: <FaAngular />,
  'Node.js': <FaNode />,
  'Spring Boot': <SiSpringboot />,
  Django: <SiDjango />,
};

const skills = [
  {
    category: 'programmingLanguages',
    icon: faCode,
    items: [
      { name: 'Java', proficiency: 90 },
      { name: 'Python', proficiency: 85 },
      { name: 'C++', proficiency: 80 },
      { name: 'JavaScript', proficiency: 90 },
    ],
  },
  {
    category: 'frameworks',
    icon: faTools,
    items: [
      { name: 'React', proficiency: 85 },
      { name: 'Angular', proficiency: 80 },
      { name: 'Node.js', proficiency: 85 },
      { name: 'Spring Boot', proficiency: 90 },
      { name: 'Django', proficiency: 85 },
    ],
  },
  {
    category: 'softSkills',
    icon: faUsers,
    items: [
      { name: 'Leadership', description: 'Led a team of 10 developers to deliver projects on time.' },
      { name: 'Problem Solving', description: 'Resolved critical issues reducing downtime by 30%.' },
      { name: 'Communication', description: 'Effectively communicated with stakeholders and clients.' },
    ],
  },
];

const Skills = () => {
  const { t } = useTranslation();

  return (
    <section id="skills" className="skills,section">
      <div className="title-container">
        <h2 className="section-title">{t('skills.title')}</h2>
      </div>
      <div className="skills__categories">
        {skills.map((skillCategory, idx) => (
          <div key={idx} className="skills__category">
            <h3 className="skills__category-title">
              <FontAwesomeIcon icon={skillCategory.icon} />
              {t(`skills.categories.${skillCategory.category}`)}
            </h3>
            {skillCategory.category !== 'softSkills' ? (
              <div className="skills__bars">
                {skillCategory.items.map((item, index) => (
                  <div key={index} className="skills__bar">
                    <span className="skills__bar-name">
                      {skillIcons[item.name]}
                      {item.name}
                    </span>
                    <div className="skills__bar-progress">
                      <div
                        className="skills__bar-fill"
                        style={{ width: `${item.proficiency}%` }}
                        aria-label={`${item.name} proficiency: ${item.proficiency}%`}
                      ></div>
                    </div>
                  </div>
                ))}
              </div>
            ) : (
              <ul className="skills__soft-skills">
                {skillCategory.items.map((item, index) => (
                  <li key={index} className="skills__soft-skill">
                    <strong>{item.name}:</strong> {item.description}
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))}
      </div>
    </section>
  );
};

export default Skills;

=== Archivo: PDFModal.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/PDFModal.jsx

import React, { useState } from 'react';
import Modal from 'react-modal';
import '../styles/components/PDFModal.scss';

Modal.setAppElement('#root');

const PDFModal = ({ isOpen, onRequestClose }) => {
  const [pdfError, setPdfError] = useState(false);
  const pdfUrl = '/TuCV.pdf';

  const handlePdfError = () => {
    setPdfError(true);
  };

  return (
    <Modal
      isOpen={isOpen}
      onRequestClose={onRequestClose}
      contentLabel="CV PDF"
      className="pdf-modal"
      overlayClassName="pdf-modal-overlay"
    >
      <div className="pdf-modal__content">
        <button onClick={onRequestClose} className="pdf-modal__close-button">
          &times;
        </button>
        {pdfError ? (
          <p>Error loading PDF. Please try again later.</p>
        ) : (
          <iframe
            src={pdfUrl}
            title="CV PDF"
            width="100%"
            height="100%"
            style={{ border: 'none' }}
            onError={handlePdfError}
          />
        )}
      </div>
    </Modal>
  );
};

export default PDFModal;

=== Archivo: Languages.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Languages.jsx

import React from 'react';
import { useTranslation } from 'react-i18next';
import '../styles/components/Languages.scss';

import enFlag from '../assets/images/flags/en.webp';
import deFlag from '../assets/images/flags/de.webp';
import frFlag from '../assets/images/flags/fr.webp';
import itFlag from '../assets/images/flags/it.webp';

const languages = [
  { code: 'en', name: 'English', level: 'C2', proficiency: 100, flag: enFlag },
  { code: 'de', name: 'Deutsch', level: 'B2', proficiency: 75, flag: deFlag },
  { code: 'fr', name: 'Français', level: 'B1', proficiency: 60, flag: frFlag },
  { code: 'it', name: 'Italiano', level: 'A2', proficiency: 40, flag: itFlag },
];

const Languages = () => {
  const { t } = useTranslation();


  return (
    <section id="languages" className="section">
      <div className="title-container">
        <h2 className="section-title">{t('languages.title')}</h2>
      </div>
      <div className="language-list">
        {languages.map((lang, idx) => (
          <div key={idx} className="language-item">
            <img src={lang.flag} alt={lang.name} loading="lazy" />
            <div className="language-info">
              <h4>{lang.name}</h4>
              <p>{t('languages.level')}: {lang.level}</p>
              <div className="language-progress">
                <div
                  className="language-progress-bar"
                  style={{ width: `${lang.proficiency}%` }}
                  aria-label={`${lang.name} proficiency: ${lang.proficiency}%`}
                ></div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  );
};

export default Languages;

=== Archivo: Experience.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Experience.jsx

// File: src/components/Experience.jsx

import React, { useContext} from 'react';
import { useTranslation } from 'react-i18next';
import { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faBriefcase } from '@fortawesome/free-solid-svg-icons';
import { ThemeContext } from '../contexts/ThemeContext'; // Asegúrate de que la ruta sea correcta
import 'react-vertical-timeline-component/style.min.css';
import '../styles/components/Education.scss';

const experiences = [
  {
    company: 'Company ABC',
    role: 'Software Architect',
    period: '2020 - Present',
    description:
      'Responsible for designing and implementing cloud-based microservices architecture.',
    achievements: [
      'Improved system performance by 40%',
      'Reduced server costs by 25%',
    ],
  },
  // Add more experiences here
];

const Experience = () => {
  const { t } = useTranslation();
  const { theme } = useContext(ThemeContext);

  const getStyles = () => {
    switch(theme) {
      case 'dark':
        return {
          content: {
            background: '#2c2c2c',
            color: '#f0f0f0',
            borderTop: '3px solid #1e90ff'
          },
          arrowStyle: { borderRight: '7px solid #2c2c2c' },
          iconStyle: { background: '#1e90ff', color: '#fff' },
        };
      case 'high-contrast':
        return {
          content: {
            background: '#000000',
            color: '#ffffff',
            borderTop: '3px solid #00ffff'
          },
          arrowStyle: { borderRight: '7px solid #000000' },
          iconStyle: { background: '#00ffff', color: '#000000' },
        };
      default:
        return {
          content: {
            background: '#ffffff',
            color: '#333333',
            borderTop: '3px solid #005A9C'
          },
          arrowStyle: { borderRight: '7px solid #ffffff' },
          iconStyle: { background: '#005A9C', color: '#fff' },
        };
    }
  };

  const styles = getStyles();

  return (
    <section className="section" id="experience">
      <div className="title-container">
        <h2 className="section-title">{t('experience.title')}</h2>
      </div>
      <VerticalTimeline>
        {experiences.map((exp, idx) => (
          <VerticalTimelineElement
            key={idx}
            date={exp.period}
            dateClassName={theme === 'dark' ? 'dark-text' : theme === 'high-contrast' ? 'high-contrast-text' : ''}
            icon={<FontAwesomeIcon icon={faBriefcase} />}
            iconStyle={styles.iconStyle}
            contentStyle={styles.content}
            contentArrowStyle={styles.arrowStyle}
          >
            <h3 className="vertical-timeline-element-title">{exp.role}</h3>
            <h4 className="vertical-timeline-element-subtitle">{exp.company}</h4>
            <p>{exp.description}</p>
            <ul>
              {exp.achievements.map((achievement, index) => (
                <li key={index}>{achievement}</li>
              ))}
            </ul>
          </VerticalTimelineElement>
        ))}
      </VerticalTimeline>
    </section>
  );
};

export default Experience;


=== Archivo: Projects.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Projects.jsx

import React from 'react';
import { useTranslation } from 'react-i18next';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faGithub, faReact, faJs, faHtml5, faCss3 } from '@fortawesome/free-brands-svg-icons';
import '../styles/components/Projects.scss';

const projects = [
  {
    id: 1,
    name: 'CV Website',
    description: 'A portfolio website built with React.',
    technologies: ['React', 'JavaScript', 'HTML5', 'CSS3'],
    github: 'https://github.com/yourusername/cv-website',
  },
  // Add more projects here
];

const technologyIcons = {
  React: faReact,
  JavaScript: faJs,
  HTML5: faHtml5,
  CSS3: faCss3,
};

const Projects = () => {
  const { t } = useTranslation();

  return (
    <section id="projects" className="projects,section">
      <div className="title-container" >
        <h2 className="section-title">{t('projects.title')}</h2>
      </div>
      <div className="projects__grid">
        {projects.map((proj) => (
          <div key={proj.id} className="projects__card">
            <h3 className="projects__card-title">{proj.name}</h3>
            <p className="projects__card-description">{proj.description}</p>
            <div className="projects__card-technologies">
              {proj.technologies.map((tech) => (
                <span key={tech} className="projects__card-tech">
                  <FontAwesomeIcon icon={technologyIcons[tech]} /> {tech}
                </span>
              ))}
            </div>
            <a
              href={proj.github}
              target="_blank"
              rel="noopener noreferrer"
              className="projects__card-link"
            >
              <FontAwesomeIcon icon={faGithub} /> {t('projects.viewProject')}
            </a>
          </div>
        ))}
      </div>
    </section>
  );
};

export default Projects;

=== Archivo: Header.test.js ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Header.test.js

// src/components/Header.test.js

import React from 'react';
import { render, screen } from '@testing-library/react';
import Header from './Header';
import { I18nextProvider } from 'react-i18next';
import i18n from '../i18n';

test('renders header title', () => {
  render(
    <I18nextProvider i18n={i18n}>
      <Header />
    </I18nextProvider>
  );
  const titleElement = screen.getByText(/Tu Nombre/i);
  expect(titleElement).toBeInTheDocument();
});


=== Archivo: Contact.jsx ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/src/components/Contact.jsx

// src/components/Contact.jsx

import React from 'react';
import { useTranslation } from 'react-i18next';
import '../styles/components/Contact.scss';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';


const Contact = () => {
  const { t } = useTranslation();

  return (
    <section id="contacto">
      <h2>{t('contact.title')}</h2>
      <p>
        {t('contact.email')}: <a href="mailto:tuemail@ejemplo.com">tuemail@ejemplo.com</a>
      </p>
      <div className="social-media">
        <a href="https://linkedin.com/in/tuusuario" target="_blank" rel="noopener noreferrer">
          LinkedIn
        </a>
        <a href="https://github.com/tuusuario" target="_blank" rel="noopener noreferrer">
          GitHub
        </a>
      </div>
      <div className="contact-actions">
        <button onClick={() => window.open('/TuCV.pdf')}>{t('contact.downloadCV')}</button>
        <button onClick={() => window.location.href = '#contacto'}>{t('contact.scheduleInterview')}</button>
      </div>
    </section>
  );
};

<div className="social-media">
  <a href="https://linkedin.com/in/tuusuario" target="_blank" rel="noopener noreferrer">
    <FontAwesomeIcon icon={faLinkedin} /> LinkedIn
  </a>
  <a href="https://github.com/tuusuario" target="_blank" rel="noopener noreferrer">
    <FontAwesomeIcon icon={faGithub} /> GitHub
  </a>
</div>

export default Contact;


=== Archivo: index.html ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/public/index.html

<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Meta tags for SEO and accessibility -->
  <meta charset="UTF-8" />
  <meta name="description"
    content="Senior Software Architect with over 10 years of experience in designing scalable systems." />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Your Name - Senior Software Architect</title>
  <!-- Content Security Policy -->
  <meta http-equiv="Content-Security-Policy" content="
        default-src 'self';
        style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
        font-src 'self' https://fonts.gstatic.com;
        img-src 'self' data:;
        script-src 'self';
        connect-src 'self' https://api.github.com;
      " />
  <!-- Preconnect to Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap" rel="stylesheet" />
</head>

<body>
  <div id="root"></div>
</body>

</html>

=== Archivo: manifest.json ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/public/manifest.json

{
  "short_name": "React App",
  "name": "Create React App Sample",
  "icons": [
    {
      "src": "favicon.ico",
      "sizes": "64x64 32x32 24x24 16x16",
      "type": "image/x-icon"
    },
    {
      "src": "logo192.png",
      "type": "image/png",
      "sizes": "192x192"
    },
    {
      "src": "logo512.png",
      "type": "image/png",
      "sizes": "512x512"
    }
  ],
  "start_url": ".",
  "display": "standalone",
  "theme_color": "#000000",
  "background_color": "#ffffff"
}


=== Archivo: package.json ===
Ruta: /Users/oriol/Desktop/Bjumper/PERSONAL/REPO/CV/cv/package.json

{
  "name": "cv",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@fortawesome/free-brands-svg-icons": "^6.6.0",
    "@fortawesome/free-solid-svg-icons": "^6.6.0",
    "@fortawesome/react-fontawesome": "^0.2.2",
    "@testing-library/jest-dom": "^6.5.0",
    "@testing-library/react": "^16.0.1",
    "@testing-library/user-event": "^14.5.2",
    "aos": "^2.3.4",
    "axios": "^1.7.7",
    "css-select": "^5.1.0",
    "framer-motion": "^11.8.0",
    "i18next": "^23.15.1",
    "lottie-react": "^2.4.0",
    "lottie-web": "^5.12.2",
    "node-sass": "^9.0.0",
    "nth-check": "^2.1.1",
    "postcss": "^8.4.47",
    "rc-progress": "^4.0.0",
    "react": "^18.3.1",
    "react-circular-progressbar": "^2.1.0",
    "react-dom": "^18.3.1",
    "react-helmet": "^6.1.0",
    "react-helmet-async": "^2.0.5",
    "react-i18next": "^15.0.2",
    "react-icons": "^5.3.0",
    "react-lottie-player": "^2.1.0",
    "react-modal": "^3.16.1",
    "react-pdf": "^9.1.1",
    "react-router-dom": "^6.26.2",
    "react-scripts": "^5.0.1",
    "react-scroll": "^1.9.0",
    "react-slick": "^0.30.2",
    "react-vertical-timeline-component": "^3.6.0",
    "recharts": "^2.12.7",
    "resolve-url-loader": "^5.0.0",
    "sass-loader": "^16.0.2",
    "slick-carousel": "^1.8.1",
    "svgo": "^3.3.2",
    "tough-cookie": "^5.0.0",
    "web-vitals": "^4.2.3"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ],
    "rules": {
      "react/no-deprecated": "off"
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/plugin-proposal-private-property-in-object": "^7.21.11"
  }
}


